// =========== THIS FILE IS AUTOMATICALLY GENERATED =========== //
/* eslint-disable */
export type Maybe<T> = T | null
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] }

/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
}

export type ParamSchema = {
  __typename?: 'ParamSchema'
  disabled?: Maybe<Scalars['Boolean']>
  id: Scalars['String']
  label?: Maybe<Scalars['String']>
  multiline?: Maybe<Scalars['Boolean']>
  rows?: Maybe<Scalars['Int']>
  debounce?: Maybe<Scalars['Int']>
  value?: Maybe<Scalars['String']>
  required?: Maybe<Scalars['Boolean']>
  helperText?: Maybe<Scalars['String']>
}

export enum StepStatus {
  Ready = 'Ready',
  Running = 'Running',
}

export type Step = {
  __typename?: 'Step'
  id: Scalars['String']
  name: Scalars['String']
  description?: Maybe<Scalars['String']>
  paramsSchema?: Maybe<Array<ParamSchema>>
  status: StepStatus
}

export type Sequence = {
  __typename?: 'Sequence'
  id: Scalars['String']
  name: Scalars['String']
  description?: Maybe<Scalars['String']>
  steps: Array<Step>
}

export type Query = {
  __typename?: 'Query'
  sequences: Array<Sequence>
  sequenceByID?: Maybe<Sequence>
  steps: Array<Step>
  stepByID?: Maybe<Step>
}

export type QuerysequenceByIDArgs = {
  id: Scalars['String']
}

export type QuerystepByIDArgs = {
  id: Scalars['String']
}

export type Mutation = {
  __typename?: 'Mutation'
  executeStep?: Maybe<Step>
}

export type MutationexecuteStepArgs = {
  id: Scalars['String']
}

export enum StepChangeType {
  Starting = 'Starting',
  Complete = 'Complete',
  Failed = 'Failed',
}

export type StepUpdate = {
  __typename?: 'StepUpdate'
  step: Step
  type?: Maybe<StepChangeType>
}

export type Subscription = {
  __typename?: 'Subscription'
  stepUpdated?: Maybe<StepUpdate>
}

export type SubscriptionstepUpdatedArgs = {
  id?: Maybe<Scalars['String']>
}
